{"version":3,"sources":["utils/api.js","components/Preview.js","pages/home.js","pages/preview.js","utils/px.js","components/grid/Header.js","components/grid/Grid.js","utils/grid/render-item.js","pages/transform.js","pages/inbound.js","pages/indexing.js","pages/topics.js","App.js","serviceWorker.js","index.js"],"names":["API_BASE","concat","process","api","path","isInteger","input","parseInt","Loading","react_default","a","createElement","className","Instructions","Preview","props","JSON","stringify","content","_default","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","productId","target","value","setState","canSubmit","preview","isLoading","fetch","state","then","response","json","data","catch","exception","alert","finally","preventDefault","body","_this$state","Preview_Loading","Preview_Preview","Preview_Instructions","render","_this$state2","onSubmit","autoFocus","placeholder","disabled","Component","Home","components_Preview_default","pages_preview","px","Header","positions","columnWidths","acc","map","val","current","positionsFromWidths","style","height","rowHeight","position","width","border","columnNames","name","index","key","left","top","Grid","extractData","setData","unfilteredData","selected","gridRef","React","createRef","_this2","url","_ref","onSelectItem","item","dataId","getAttribute","prevState","scrollToItem","align","rowIndex","count","length","_this3","_this$props","itemName","itemRenderer","showFooter","outerElementType","forwardRef","ref","assign","onClick","bind","index_esm","itemData","columnCount","columnWidth","rowCount","render_item","columnIndex","columns","formatters","classNames","formatter","data-id","title","TransformItemRenderer","renderItem","objectSpread","Date","toLocaleString","PureComponent","TransformErrorItemRenderer","Array","Transform","itemBatchId","transform_batch_id","deselecting","setTimeout","Grid_Grid","batch_errors","InboundItemRenderer","Inbound","indexing","href","rel","Topic","_ref2","match","params","topicId","Topics","react_router_dom","to","react_router","component","exact","App","basename","Indexing","Boolean","window","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e12f346f.chunk.js","sourcesContent":["const API_BASE = `${process.env.PUBLIC_URL}/../api/`;\nconst API_SUFFIX = \".json\";\n\nexport default path => {\n  return API_BASE + path + API_SUFFIX;\n};\n","import React, { Component } from \"react\";\nimport api from \"../utils/api\";\nimport \"./Preview.css\";\n\nconst isInteger = input => {\n  return \"\" + parseInt(input) === input;\n};\n\nconst Loading = () => <div className=\"preview-instructions\">Loading...</div>;\n\nconst Instructions = () => {\n  return (\n    <div className=\"preview-instructions\">\n      Enter a bridge catalog db product id to preview how it is indexed.\n    </div>\n  );\n};\n\nconst Preview = props => {\n  return (\n    <pre className=\"align-left preview\">\n      {JSON.stringify(props.content, null, \" \")}\n    </pre>\n  );\n};\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      productId: \"\",\n      canSubmit: false,\n      preview: \"\",\n      isLoading: false\n    };\n  }\n\n  onChange = e => {\n    const productId = e.target.value;\n    this.setState({ productId, canSubmit: isInteger(productId) });\n  };\n\n  preview = e => {\n    this.setState({ isLoading: true });\n    fetch(api(`products/${this.state.productId}?stream=false`))\n      .then(response => response.json())\n      .then(data => this.setState({ preview: data }))\n      .catch(exception => alert(`Unable to preview: ${exception}`))\n      .finally(() => {\n        this.setState({ isLoading: false });\n      });\n    e.preventDefault();\n  };\n\n  body = () => {\n    const { isLoading, preview } = this.state;\n    if (isLoading) {\n      return <Loading />;\n    } else if (preview) {\n      return <Preview content={preview} />;\n    } else {\n      return <Instructions />;\n    }\n  };\n\n  render = () => {\n    const { productId, canSubmit } = this.state;\n    return (\n      <form onSubmit={this.preview}>\n        <input\n          value={productId}\n          onChange={this.onChange}\n          autoFocus\n          placeholder=\"product id\"\n          className=\"preview-text-input\"\n        />\n        <span>{canSubmit}</span>\n        <button className=\"preview-button\" disabled={!canSubmit}>\n          Preview\n        </button>\n        {this.body()}\n      </form>\n    );\n  };\n}\n","import React from \"react\";\nimport Preview from \"../components/Preview\";\n\nfunction Home() {\n  return (\n    <div>\n      <h2>Welcome to Item Indexer</h2>\n      <Preview />\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport Preview from \"../components/Preview\";\n\nexport default function () {\n  return (\n    <div>\n      <h2>Product Preview</h2>\n      <Preview />\n    </div>\n  );\n}\n","export default value => value && `${value}px`;\n","import React from \"react\";\nimport px from \"../../utils/px\";\n\nconst positionsFromWidths = columnWidths => {\n  let acc = 0;\n  return columnWidths.map(val => {\n    const current = acc;\n    acc += val;\n    return current;\n  });\n};\n\nexport default props => {\n  const positions = positionsFromWidths(props.columnWidths);\n  return (\n    <div\n      className=\"Header\"\n      style={{\n        height: px(props.rowHeight),\n        position: \"relative\",\n        width: px(props.width),\n        border: \"0 none\"\n      }}\n    >\n      {props.columnNames.map((name, index) => (\n        <div\n          key={name}\n          style={{\n            position: \"absolute\",\n            left: px(positions[index]),\n            top: \"0px\",\n            height: px(props.rowHeight),\n            width: px(props.columnWidths[index])\n          }}\n        >\n          {name}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import Header from \"../../components/grid/Header\";\nimport { VariableSizeGrid } from \"react-window\";\nimport React, { forwardRef, Component } from \"react\";\n\nexport default class Grid extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      unfilteredData: null,\n      selected: null\n    };\n    this.gridRef = React.createRef();\n  }\n\n  extractData = response => {\n    const method = this.props.setData || (data => data);\n    return method(response);\n  };\n\n  componentDidMount() {\n    fetch(this.props.url)\n      .then(response => response.json())\n      .then(data => this.extractData(data))\n      .then(data => this.setState({ data }));\n  }\n\n  onClick({ target }) {\n    const { onSelectItem } = this.props;\n\n    if (onSelectItem) {\n      const dataId = target.getAttribute(\"data-id\");\n\n      let item;\n      if (this.state.selected) {\n        this.setState(prevState => {\n          return {\n            data: prevState.unfilteredData,\n            unfilteredData: null,\n            selected: null\n          };\n        });\n      }\n\n      item = this.state.data && this.state.data[dataId];\n      if (item) {\n        if (!this.state.selected) {\n          this.gridRef.current.scrollToItem({\n            align: \"start\",\n            rowIndex: 0\n          });\n          this.setState(prevState => {\n            return {\n              data: [item],\n              unfilteredData: prevState.unfilteredData || prevState.data,\n              selected: item\n            };\n          });\n        } else {\n        }\n      }\n\n      onSelectItem(item);\n    }\n  }\n\n  count() {\n    let count = \"none\";\n    if (this.state.data && this.state.data.length) {\n      count = this.state.data.length;\n    }\n    return count;\n  }\n\n  render() {\n    const {\n      width,\n      height,\n      rowHeight,\n      columnNames,\n      columnWidths,\n      itemName,\n      itemRenderer,\n      showFooter\n    } = this.props;\n\n    const outerElementType = forwardRef((props, ref) => {\n      return <div ref={ref} onClick={this.onClick.bind(this)} {...props} />;\n    });\n\n    return (\n      <div>\n        {this.state.data && this.state.data.length > 0 && (\n          <div>\n            <Header\n              columnWidths={columnWidths}\n              width={width}\n              rowHeight={rowHeight}\n              columnNames={columnNames}\n            />\n            <VariableSizeGrid\n              itemData={this.state.data}\n              className=\"List\"\n              columnCount={columnWidths.length}\n              columnWidth={index => columnWidths[index]}\n              outerElementType={outerElementType}\n              height={this.state.selected ? rowHeight : height}\n              rowCount={this.state.data.length}\n              rowHeight={() => rowHeight}\n              width={width}\n              ref={this.gridRef}\n            >\n              {itemRenderer}\n            </VariableSizeGrid>\n          </div>\n        )}\n        {this.state.data && this.state.data.length === 0 && <div>No results</div>}\n        {showFooter && (\n          <div>\n            {this.count()}\n            {this.count() !== \"none\" && <span> {itemName}s</span>}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default ({\n  columnIndex,\n  data,\n  rowIndex,\n  style,\n  columns,\n  formatters,\n  classNames\n}) => {\n  // Access the data source using the \"data\" prop:\n  const value = data[rowIndex][columns[columnIndex]];\n  const formatter = formatters[columnIndex];\n  const item = !!formatter ? formatter(value, rowIndex) : value;\n\n  const className = `${classNames[columnIndex]} ${\n    rowIndex % 2 === 0 ? \"even\" : \"odd\"\n  }`;\n\n  return (\n    <div className={className} data-id={rowIndex} style={style} title={item}>\n      {item}\n    </div>\n  );\n};","import React, { Component, PureComponent } from \"react\";\nimport Grid from \"../components/grid/Grid\";\nimport renderItem from \"../utils/grid/render-item\";\nimport \"./transform.css\";\nimport api from \"../utils/api\";\n\nclass TransformItemRenderer extends PureComponent {\n  render() {\n    return renderItem({\n      columns: [\n        \"id\",\n        \"transform_batch_id\",\n        \"status\",\n        \"status_reason\",\n        \"start_datetime\",\n        \"stop_datetime\"\n      ],\n      formatters: [\n        (value, index) => index + 1,\n        null,\n        null,\n        // value => value && value.substring(0, 100),\n        null,\n        value => value && new Date(value).toLocaleString(),\n        value => value && new Date(value).toLocaleString()\n      ],\n      classNames: ['clickable', 'clickable', 'clickable statusReason', 'clickable', 'clickable'],\n      ...this.props\n    });\n  }\n}\n\n// transform_batch_error_id transform_batch_id source_item_type     source_item_id message\n// ------------------------ ------------------ -------------------- -------------- --------------------------------------\n// 6250282                  140767             External::XPDM::Item 67048021       Concept skus concept vendor must exist\n\nclass TransformErrorItemRenderer extends PureComponent {\n  render() {\n    return renderItem({\n      columns: [\n        \"transform_batch_error_id\",\n        \"transform_batch_id\",\n        \"source_item_type\",\n        \"source_item_id\",\n        \"message\"\n      ],\n      formatters: new Array(5),\n      classNames: [null, null, null, null, \"statusReason\"],\n      ...this.props\n    });\n  }\n}\n\nexport default class Transform extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: null\n    };\n  }\n\n  onSelectItem = item => {\n    const itemBatchId = item && item.transform_batch_id;\n    const deselecting = this.state.selected === itemBatchId;\n    this.setState({selected: null});\n    if (!deselecting) {\n      setTimeout(() => this.setState({ selected: itemBatchId }), 200);\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h2>Inbound Transform Batches</h2>\n        <Grid\n          width={1350}\n          height={400}\n          rowHeight={35}\n          columnWidths={[50, 100, 75, 500, 300, 300]}\n          columnNames={[\"#\", \"id\", \"status\", \"reason\", \"start\", \"stop\"]}\n          itemName=\"transform\"\n          itemRenderer={TransformItemRenderer}\n          url={api(\"transform_batches\")}\n          onSelectItem={this.onSelectItem}\n        />\n        {this.state.selected && (\n          <div className=\"errors-grid\">\n            Errors\n            <Grid\n              width={1350}\n              height={400}\n              rowHeight={35}\n              columnWidths={[100, 100, 500, 300, 300]}\n              columnNames={[\"id\", \"batch id\", \"source item type\", \"source item id\", \"message\"]}\n              itemName=\"error\"\n              itemRenderer={TransformErrorItemRenderer}\n              url={api(`transform_batches/${this.state.selected}`)}\n              setData={response => response.batch_errors}\n              showFooter={true}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component, PureComponent } from \"react\";\nimport Grid from \"../components/grid/Grid\";\nimport renderItem from \"../utils/grid/render-item\";\nimport api from \"../utils/api\";\nimport \"./transform.css\";\n\nclass InboundItemRenderer extends PureComponent {\n  render() {\n    return renderItem({\n      columns: [\n        \"id\",\n        \"inbound_batch_id\",\n        \"source\",\n        \"data_type\",\n        \"status\",\n        \"status_reason\",\n        \"file_name\",\n        \"start_datetime\",\n        \"stop_datetime\",\n        \"transform_batch_id\"\n      ],\n      formatters: [\n        (value, index) => index + 1,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        value => value && new Date(value).toLocaleString(),\n        value => value && new Date(value).toLocaleString(),\n        null\n      ],\n      classNames: [\n        null,\n        null,\n        null,\n        null,\n        null,\n        \"statusReason\",\n        \"fileName\",\n        null,\n        null,\n        null,\n        null\n      ],\n      ...this.props\n    });\n  }\n}\n\n// inbound_batch_id source data_type   status   status_reason                                                                                     file_name                  start_datetime      stop_datetime       transform_batch_id\n// ---------------- ------ ----------- -------- ------------------------------------------------------------------------------------------------- -------------------------- ------------------- ------------------- ------------------\n// 79340            JDA    sku_pricing complete Completed successfully (0 records processed, taking 1.3978579999999998 sec). (Oct 14 10:05 (UTC)) AS/400(BEYOND): PIPPRCMSSW 2018-10-14 10:05:26 2018-10-14 10:05:28 76241\n\nexport default class Inbound extends Component {\n  render() {\n    return (\n      <div>\n        <h2>Inbound Batches</h2>\n        <Grid\n          width={1600}\n          height={400}\n          rowHeight={35}\n          columnWidths={[50, 75, 100, 100, 75, 375, 300, 200, 200, 100]}\n          columnNames={[\n            \"#\",\n            \"id\",\n            \"source\",\n            \"data type\",\n            \"status\",\n            \"reason\",\n            \"file_name\",\n            \"start\",\n            \"stop\",\n            \"transform batch id\"\n          ]}\n          itemName=\"inbound\"\n          itemRenderer={InboundItemRenderer}\n          url={api(\"inbound_batches\")}\n          onSelectItem={this.onSelectItem}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react'\n\nexport default function() {\n  return (\n    <div>\n      <h2>Indexing</h2>\n        Coming Soon in <a href=\"https://onekingslane.atlassian.net/browse/CAT-1052\" target=\"_blank\" rel=\"noopener noreferrer\">CAT-1052</a>...\n    </div>\n  );\n}\n","import React from 'react';\nimport {Link, Route} from \"react-router-dom\";\n\nfunction Topics({ match }) {\n  return (\n    <div>\n      <h2>Topics</h2>\n      <ul>\n        <li>\n          <Link to={`${match.url}/rendering`}>Rendering with React</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/components`}>Components</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/props-v-state`}>Props v. State</Link>\n        </li>\n      </ul>\n\n      <Route path={`${match.path}/:topicId`} component={Topic} />\n      <Route\n        exact\n        path={match.path}\n        render={() => <h3>Please select a topic.</h3>}\n      />\n    </div>\n  );\n}\n\nfunction Topic({ match }) {\n  return (\n    <div>\n      <h3>{match.params.topicId}</h3>\n    </div>\n  );\n}\n\nexport default Topics;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Home from './pages/home';\nimport Preview from './pages/preview';\nimport Transform from './pages/transform';\nimport Inbound from './pages/inbound';\nimport Indexing from './pages/indexing';\nimport Topics from './pages/topics';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router basename={`${process.env.PUBLIC_URL}/`}>\n      <div className=\"App\">\n        <ul className=\"App-navigation\">\n          <li>\n            <Link to=\"/preview\">Preview</Link>\n          </li>\n          <li>\n            <Link to=\"/inbound\">Inbound</Link>\n          </li>\n          <li>\n            <Link to=\"/transform\">Transform</Link>\n          </li>\n          <li>\n            <Link to=\"/indexing\">Indexing</Link>\n          </li>\n        </ul>\n\n        <hr />\n\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/preview\" component={Preview} />\n        <Route path=\"/inbound\" component={Inbound} />\n        <Route path=\"/transform\" component={Transform} />\n        <Route path=\"/indexing\" component={Indexing} />\n        <Route path=\"/topics\" component={Topics} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}