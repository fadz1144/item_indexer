{"version":3,"sources":["utils/api.js","components/Preview.js","pages/home.js","pages/preview.js","utils/px.js","components/grid/Header.js","components/Inflected.js","components/grid/Footer.js","components/grid/Grid.js","utils/grid/render-item.js","pages/transform.js","pages/inbound.js","utils/format.js","components/chart/IndexBatchChart.js","components/StatefulClicker.js","pages/indexing.js","pages/topics.js","App.js","serviceWorker.js","index.js"],"names":["API_BASE","concat","process","api","path","isInteger","input","parseInt","Loading","react_default","a","createElement","className","Instructions","Preview","props","JSON","stringify","content","_default","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","productId","target","value","setState","canSubmit","preview","isLoading","fetch","state","then","response","json","data","catch","exception","alert","finally","preventDefault","body","_this$state","Preview_Loading","Preview_Preview","Preview_Instructions","render","_this$state2","onSubmit","autoFocus","placeholder","disabled","Component","Home","components_Preview_default","pages_preview","px","Header","positions","columnWidths","acc","map","val","current","positionsFromWidths","style","height","rowHeight","position","width","border","columnNames","name","index","key","left","top","Inflected","_ref","count","singular","plural","inflected","suffix","Footer","itemName","pluralItemName","isSelected","onDeselect","_ref2","onClick","Grid","extractData","error","setData","prevState","unfilteredData","selected","gridRef","React","createRef","_this2","url","_this3","_this$props","onSelectItem","onClickItem","item","dataId","getAttribute","selectedItem","scrollToItem","align","rowIndex","length","_this4","_this$props2","itemRenderer","outerElementType","forwardRef","ref","assign","bind","index_esm","itemData","columnCount","columnWidth","rowCount","render_item","columnIndex","columns","formatters","classNames","formatter","data-id","title","TransformItemRenderer","renderItem","objectSpread","Date","toLocaleString","PureComponent","TransformErrorItemRenderer","Array","Transform","itemBatchId","transform_batch_id","deselecting","setTimeout","Grid_Grid","batch_errors","InboundItemRenderer","Inbound","pluralize","irregularPlural","minutesForHumans","minutes","hours","Math","floor","remainder","round","STYLES","chart","normal","stroke","strokeWidth","axis","label","fill","font-weight","font-size","elapsed","scatterChart","NullMarker","UNTRACKED_TITLE","IndexBatchChart","handleTimeRangeChange","timerange","handleTrackerChanged","t","trackerEvent","series","atTime","tracker","begin","getTime","end","errorCount","get","errors","elapsedMinutes","trackerValue","toLocaleDateString","renderMarker","column","color","lib_entry","type","event","markerLabel","markerLabelAlign","markerLabelStyle","fontSize","fontWeight","markerRadius","markerStyle","IndexBatchChart_NullMarker","prepareTimeSeries","batches","seriesData","points","filter","batch","status","start_datetime","elapsed_seconds","error_count","reverse","TimeSeries","max","timeRange","enablePanZoom","onTimeRangeChanged","onTrackerChanged","titleStyle","id","renderChart","StatefulClicker","isActive","_props$inert","inert","_props$active","active","IndexingItemRenderer","IndexingErrorItemRenderer","Indexing","index_batch_id","onClickErrorItem","indexed_item_type","indexed_item_id","window","open","fetchData","loading","indexBatches","IndexBatchChart_IndexBatchChart","Topic","match","params","topicId","Topics","react_router_dom","to","react_router","component","exact","App","basename","Boolean","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3b1a986f.chunk.js","sourcesContent":["const API_BASE = `${process.env.PUBLIC_URL}/../api/`;\nconst API_SUFFIX = \".json\";\n\nexport default path => {\n  return API_BASE + path + API_SUFFIX;\n};\n","import React, { Component } from \"react\";\nimport api from \"../utils/api\";\nimport \"./Preview.css\";\n\nconst isInteger = input => {\n  return \"\" + parseInt(input) === input;\n};\n\nconst Loading = () => <div className=\"preview-instructions\">Loading...</div>;\n\nconst Instructions = () => {\n  return (\n    <div className=\"preview-instructions\">\n      Enter a bridge catalog db product id to preview how it is indexed.\n    </div>\n  );\n};\n\nconst Preview = props => {\n  return (\n    <pre className=\"align-left preview\">\n      {JSON.stringify(props.content, null, \" \")}\n    </pre>\n  );\n};\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      productId: \"\",\n      canSubmit: false,\n      preview: \"\",\n      isLoading: false\n    };\n  }\n\n  onChange = e => {\n    const productId = e.target.value;\n    this.setState({ productId, canSubmit: isInteger(productId) });\n  };\n\n  preview = e => {\n    this.setState({ isLoading: true });\n    fetch(api(`products/${this.state.productId}.json?stream=false`))\n      .then(response => response.json())\n      .then(data => this.setState({ preview: data }))\n      .catch(exception => alert(`Unable to preview: ${exception}`))\n      .finally(() => {\n        this.setState({ isLoading: false });\n      });\n    e.preventDefault();\n  };\n\n  body = () => {\n    const { isLoading, preview } = this.state;\n    if (isLoading) {\n      return <Loading />;\n    } else if (preview) {\n      return <Preview content={preview} />;\n    } else {\n      return <Instructions />;\n    }\n  };\n\n  render = () => {\n    const { productId, canSubmit } = this.state;\n    return (\n      <form onSubmit={this.preview}>\n        <input\n          value={productId}\n          onChange={this.onChange}\n          autoFocus\n          placeholder=\"product id\"\n          className=\"preview-text-input\"\n        />\n        <span>{canSubmit}</span>\n        <button className=\"preview-button\" disabled={!canSubmit}>\n          Preview\n        </button>\n        {this.body()}\n      </form>\n    );\n  };\n}\n","import React from \"react\";\nimport Preview from \"../components/Preview\";\n\nfunction Home() {\n  return (\n    <div>\n      <h2>Welcome to Item Indexer</h2>\n      <Preview />\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport Preview from \"../components/Preview\";\n\nexport default function () {\n  return (\n    <div>\n      <h2>Product Preview</h2>\n      <Preview />\n    </div>\n  );\n}\n","export default value => value && `${value}px`;\n","import React from \"react\";\nimport px from \"../../utils/px\";\n\nconst positionsFromWidths = columnWidths => {\n  let acc = 0;\n  return columnWidths.map(val => {\n    const current = acc;\n    acc += val;\n    return current;\n  });\n};\n\nexport default props => {\n  const positions = positionsFromWidths(props.columnWidths);\n  return (\n    <div\n      className=\"Header\"\n      style={{\n        height: px(props.rowHeight),\n        position: \"relative\",\n        width: px(props.width),\n        border: \"0 none\"\n      }}\n    >\n      {props.columnNames.map((name, index) => (\n        <div\n          key={name}\n          style={{\n            position: \"absolute\",\n            left: px(positions[index]),\n            top: \"0px\",\n            height: px(props.rowHeight),\n            width: px(props.columnWidths[index])\n          }}\n        >\n          {name}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({ count, singular, plural }) => {\n  const suffix = count => (count === 1 ? \"\" : \"s\");\n  const inflected = () => {\n    const isPlural = count !== 1;\n    let inflected = singular;\n    if (isPlural) {\n      inflected = plural || singular + suffix();\n    }\n    return inflected;\n  };\n  return <span>{inflected()}</span>;\n};","import React from \"react\";\nimport Inflected from \"../Inflected\";\n\nexport default ({\n  count,\n  itemName,\n  pluralItemName,\n  isSelected,\n  onDeselect\n}) => {\n\n  // selection indicator and UI for clearing same\n  const Selected = ({ onDeselect }) => {\n    return <span> selected <span className=\"clickable link\" onClick={onDeselect}>clear</span></span>\n  };\n\n  return (\n    <div>\n      {count}\n      {count !== \"none\" && (\n        <span>\n          {\" \"}\n          <Inflected\n            count={count}\n            singular={itemName}\n            plural={pluralItemName}\n          />\n          {isSelected && <Selected onDeselect={onDeselect}/>}\n        </span>\n      )}\n    </div>\n  );\n};\n","import { VariableSizeGrid } from \"react-window\";\nimport React, { forwardRef, Component } from \"react\";\nimport Header from \"../../components/grid/Header\";\nimport Footer from \"./Footer\";\nimport \"./Grid.css\";\n\n// provide either a url or a data object\nexport default class Grid extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      unfilteredData: null,\n      selected: null\n    };\n    this.gridRef = React.createRef();\n  }\n\n  extractData = response => {\n    if (response.error) {\n      alert('cannot load data: ' + response.error);\n    } else {\n      const method = this.props.setData || (data => data);\n      return method(response);\n    }\n  };\n\n  componentDidMount() {\n    if (this.props.data) {\n      this.setState({data: this.props.data});\n    } else if (this.props.url) {\n      fetch(this.props.url)\n        .then(response => response.json())\n        .then(data => this.extractData(data))\n        .then(data => this.setState({ data }));\n    }\n  }\n\n  onClick({ target }) {\n    const { onSelectItem, onClickItem } = this.props;\n\n    const item = () => {\n      const dataId = target.getAttribute(\"data-id\");\n      return this.state.data && this.state.data[dataId];\n    };\n\n    if (onClickItem) {\n      onClickItem(item());\n    }\n\n    if (onSelectItem) {\n      const selectedItem = item();\n      if (this.state.selected) {\n        // clear already selected item\n        this.onDeselect();\n      } else {\n        if (selectedItem) {\n          if (!this.state.selected) {\n            // set selected state\n            this.gridRef.current.scrollToItem({\n              align: \"start\",\n              rowIndex: 0\n            });\n            this.setState(prevState => {\n              return {\n                data: [selectedItem],\n                unfilteredData: prevState.unfilteredData || prevState.data,\n                selected: selectedItem\n              };\n            });\n          }\n        }\n      }\n\n      onSelectItem(selectedItem);\n    }\n  }\n\n  onDeselect = () => {\n    this.setState(prevState => {\n      return {\n        data: prevState.unfilteredData,\n        unfilteredData: null,\n        selected: null\n      };\n    });\n  };\n\n  count() {\n    let count = \"none\";\n    if (this.state.data && this.state.data.length) {\n      count = this.state.data.length;\n    }\n    return count;\n  }\n\n  render() {\n    const {\n      width,\n      height,\n      rowHeight,\n      columnNames,\n      columnWidths,\n      itemName,\n      pluralItemName,\n      itemRenderer\n    } = this.props;\n\n    const outerElementType = forwardRef((props, ref) => {\n      return <div ref={ref} onClick={this.onClick.bind(this)} {...props} />;\n    });\n\n    return (\n      <div>\n        {this.state.data && this.state.data.length > 0 && (\n          <div>\n            <Header\n              columnWidths={columnWidths}\n              width={width}\n              rowHeight={rowHeight}\n              columnNames={columnNames}\n            />\n            <VariableSizeGrid\n              itemData={this.state.data}\n              className=\"List\"\n              columnCount={columnWidths.length}\n              columnWidth={index => columnWidths[index]}\n              outerElementType={outerElementType}\n              height={this.state.selected ? rowHeight : height}\n              rowCount={this.state.data.length}\n              rowHeight={() => rowHeight}\n              width={width}\n              ref={this.gridRef}\n            >\n              {itemRenderer}\n            </VariableSizeGrid>\n          </div>\n        )}\n        <Footer\n          count={this.count()}\n          itemName={itemName}\n          pluralItemName={pluralItemName}\n          isSelected={!!this.state.selected}\n          onDeselect={this.onDeselect}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default ({\n  columnIndex,\n  data,\n  rowIndex,\n  style,\n  columns,\n  formatters,\n  classNames\n}) => {\n  // Access the data source using the \"data\" prop:\n  const value = data[rowIndex][columns[columnIndex]];\n  const formatter = formatters[columnIndex];\n  const item = !!formatter ? formatter(value, rowIndex) : value;\n\n  const className = `${classNames[columnIndex]} ${\n    rowIndex % 2 === 0 ? \"even\" : \"odd\"\n  }`;\n\n  return (\n    <div className={className} data-id={rowIndex} style={style} title={item}>\n      {item}\n    </div>\n  );\n};","import React, { Component, PureComponent } from \"react\";\nimport Grid from \"../components/grid/Grid\";\nimport renderItem from \"../utils/grid/render-item\";\nimport \"./transform.css\";\nimport api from \"../utils/api\";\n\nclass TransformItemRenderer extends PureComponent {\n  render() {\n    return renderItem({\n      columns: [\n        \"id\",\n        \"transform_batch_id\",\n        \"status\",\n        \"status_reason\",\n        \"start_datetime\",\n        \"stop_datetime\"\n      ],\n      formatters: [\n        (value, index) => index + 1,\n        null,\n        null,\n        // value => value && value.substring(0, 100),\n        null,\n        value => value && new Date(value).toLocaleString(),\n        value => value && new Date(value).toLocaleString()\n      ],\n      classNames: ['clickable', 'clickable link', 'clickable long', 'clickable', 'clickable'],\n      ...this.props\n    });\n  }\n}\n\n// transform_batch_error_id transform_batch_id source_item_type     source_item_id message\n// ------------------------ ------------------ -------------------- -------------- --------------------------------------\n// 6250282                  140767             External::XPDM::Item 67048021       Concept skus concept vendor must exist\n\nclass TransformErrorItemRenderer extends PureComponent {\n  render() {\n    return renderItem({\n      columns: [\n        \"transform_batch_error_id\",\n        \"transform_batch_id\",\n        \"source_item_type\",\n        \"source_item_id\",\n        \"message\"\n      ],\n      formatters: new Array(5),\n      classNames: [null, null, null, null, \"long\"],\n      ...this.props\n    });\n  }\n}\n\nexport default class Transform extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: null\n    };\n  }\n\n  onSelectItem = item => {\n    const itemBatchId = item && item.transform_batch_id;\n    const deselecting = this.state.selected === itemBatchId;\n    this.setState({selected: null});\n    if (!deselecting) {\n      setTimeout(() => this.setState({ selected: itemBatchId }), 200);\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h2>Inbound Transform Batches</h2>\n        <Grid\n          width={1350}\n          height={400}\n          rowHeight={35}\n          columnWidths={[50, 100, 75, 500, 300, 300]}\n          columnNames={[\"#\", \"id\", \"status\", \"reason\", \"start\", \"stop\"]}\n          itemName=\"transform batch\"\n          pluralItemName=\"transform batches\"\n          itemRenderer={TransformItemRenderer}\n          url={api(\"transform_batches\")}\n          onSelectItem={this.onSelectItem}\n        />\n        {this.state.selected && (\n          <div className=\"errors-grid\">\n            Errors\n            <Grid\n              width={1350}\n              height={400}\n              rowHeight={35}\n              columnWidths={[100, 100, 300, 150, 650]}\n              columnNames={[\"id\", \"batch id\", \"source item type\", \"source item id\", \"message\"]}\n              itemName=\"error\"\n              itemRenderer={TransformErrorItemRenderer}\n              url={api(`transform_batches/${this.state.selected}`)}\n              setData={response => response.batch_errors}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component, PureComponent } from \"react\";\nimport Grid from \"../components/grid/Grid\";\nimport renderItem from \"../utils/grid/render-item\";\nimport api from \"../utils/api\";\nimport \"./transform.css\";\n\nclass InboundItemRenderer extends PureComponent {\n  render() {\n    return renderItem({\n      columns: [\n        \"id\",\n        \"inbound_batch_id\",\n        \"source\",\n        \"data_type\",\n        \"status\",\n        \"status_reason\",\n        \"file_name\",\n        \"start_datetime\",\n        \"stop_datetime\",\n        \"transform_batch_id\"\n      ],\n      formatters: [\n        (value, index) => index + 1,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        value => value && new Date(value).toLocaleString(),\n        value => value && new Date(value).toLocaleString(),\n        null\n      ],\n      classNames: [\n        null,\n        null,\n        null,\n        null,\n        null,\n        \"long\",\n        \"medium\",\n        null,\n        null,\n        null,\n        null\n      ],\n      ...this.props\n    });\n  }\n}\n\n// inbound_batch_id source data_type   status   status_reason                                                                                     file_name                  start_datetime      stop_datetime       transform_batch_id\n// ---------------- ------ ----------- -------- ------------------------------------------------------------------------------------------------- -------------------------- ------------------- ------------------- ------------------\n// 79340            JDA    sku_pricing complete Completed successfully (0 records processed, taking 1.3978579999999998 sec). (Oct 14 10:05 (UTC)) AS/400(BEYOND): PIPPRCMSSW 2018-10-14 10:05:26 2018-10-14 10:05:28 76241\n\nexport default class Inbound extends Component {\n  render() {\n    return (\n      <div>\n        <h2>Inbound Batches</h2>\n        <Grid\n          width={1600}\n          height={400}\n          rowHeight={35}\n          columnWidths={[50, 75, 100, 100, 75, 375, 300, 200, 200, 100]}\n          columnNames={[\n            \"#\",\n            \"id\",\n            \"source\",\n            \"data type\",\n            \"status\",\n            \"reason\",\n            \"file_name\",\n            \"start\",\n            \"stop\",\n            \"transform batch id\"\n          ]}\n          itemName=\"inbound batch\"\n          pluralItemName=\"inbound batches\"\n          itemRenderer={InboundItemRenderer}\n          url={api(\"inbound_batches\")}\n          onSelectItem={this.onSelectItem}\n        />\n      </div>\n    );\n  }\n}\n","const pluralize = (input, singular, irregularPlural) => {\n  const plural = irregularPlural || `${singular}s`;\n  return input === 1 ? singular : plural;\n};\nconst minutesForHumans = minutes => {\n  const hours = Math.floor(minutes / 60);\n  const remainder = Math.round(minutes % 60);\n  return `${hours} ${pluralize(hours, \"hour\")} ${remainder} ${pluralize(minutes, \"minute\")}`;\n};\nexport { pluralize, minutesForHumans };\n","import React, { Component } from \"react\";\nimport { TimeSeries } from \"pondjs\";\nimport {\n  Charts,\n  ChartContainer,\n  ChartRow,\n  YAxis,\n  LineChart,\n  ScatterChart,\n  EventMarker\n} from \"react-timeseries-charts\";\nimport { pluralize, minutesForHumans } from \"../../utils/format\";\nimport \"./IndexBatchChart.css\";\n\nconst ERROR_COLOR = '#c0392b';\nconst ELAPSED_COLOR = '#2980b9';\n\nconst STYLES = {\n  error: {\n    chart: {\n      error: {\n        normal: {\n          stroke: ERROR_COLOR,\n          strokeWidth: 1\n        }\n      }\n    },\n    axis: {\n      label: {\n        fill: ERROR_COLOR,\n        \"font-weight\": \"bold\",\n        \"font-size\": \"12px\"\n      }\n    }\n  },\n  elapsed: {\n    chart: {\n      elapsed: {\n        normal: { stroke: ELAPSED_COLOR, strokeWidth: 1 }\n      }\n    },\n    scatterChart: {\n      elapsed: {\n        normal: { stroke: ELAPSED_COLOR, strokeWidth: 1, fill: ELAPSED_COLOR }\n      }\n    },\n    axis: {\n      label: {\n        fill: ELAPSED_COLOR,\n        \"font-weight\": \"bold\",\n        \"font-size\": \"12px\"\n      }\n    }\n  }\n};\n\nconst NullMarker = () => {\n  return <g />;\n};\n\nconst UNTRACKED_TITLE = \"\";\n\nexport default class IndexBatchChart extends Component {\n  constructor(props) {\n    super(props);\n    const series = this.prepareTimeSeries(props.batches);\n    this.state = {\n      series,\n      timerange: series.timerange(),\n      tracker: null,\n      trackerValue: \"initial tracker value\",\n      trackerEvent: null,\n      title: UNTRACKED_TITLE\n    };\n  }\n\n  prepareTimeSeries(batches) {\n    if (batches) {\n      const seriesData = {\n        name: \"Indexing Runs\",\n        columns: [\"time\", \"elapsed\", \"error\"],\n\n        points: batches\n          // skip aborted batches\n          .filter(batch => batch.status !== \"in progress\")\n\n          // e.g. [1400425947000, 9867, 52],\n          .map(batch => [\n            new Date(batch.start_datetime).getTime(),\n            batch.elapsed_seconds / 60,\n            batch.error_count\n          ])\n\n          // reverse to put in chronological order past to present\n          .reverse()\n      };\n      return new TimeSeries(seriesData);\n    }\n  }\n\n  handleTimeRangeChange = timerange => {\n    this.setState({ timerange });\n  };\n\n  handleTrackerChanged = t => {\n    if (t) {\n      const trackerEvent = this.state.series.atTime(t);\n      const tracker = new Date(\n        trackerEvent.begin().getTime() +\n          (trackerEvent.end().getTime() - trackerEvent.begin().getTime()) / 2\n      );\n      const errorCount = trackerEvent.get(\"error\");\n      const errors = `${errorCount} ${pluralize(errorCount, \"error\")}`;\n      const elapsedMinutes = trackerEvent.get(\"elapsed\");\n      const elapsed = `${minutesForHumans(elapsedMinutes)}`;\n      const trackerValue = { errors, elapsed };\n      const title = tracker.toLocaleDateString();\n      this.setState({ tracker, trackerValue, trackerEvent, title });\n    } else {\n      this.setState({\n        tracker: null,\n        trackerValue: null,\n        trackerEvent: null,\n        title: UNTRACKED_TITLE\n      });\n    }\n  };\n\n  renderMarker = (axis, column, color) => {\n    if (this.state.tracker) {\n      return (\n        <EventMarker\n          type=\"point\"\n          axis={axis}\n          event={this.state.trackerEvent}\n          column={column}\n          markerLabel={this.state.trackerValue[axis]}\n          markerLabelAlign=\"right\"\n          markerLabelStyle={{\n            fill: \"black\",\n            stroke: \"black\",\n            strokeWidth: 0.25,\n            fontSize: \"9px\",\n            fontWeight: \"normal\"\n          }}\n          markerRadius={3}\n          markerStyle={{ fill: color }}\n        />\n      );\n    } else {\n      return <NullMarker />;\n    }\n  };\n\n  renderChart() {\n    const { series, timerange } = this.state;\n\n    const max = {\n      error: series.max(\"error\"),\n      elapsed: series.max(\"elapsed\")\n    };\n\n    return (\n      <ChartContainer\n        timeRange={timerange}\n        enablePanZoom={true}\n        onTimeRangeChanged={this.handleTimeRangeChange}\n        onTrackerChanged={this.handleTrackerChanged}\n        title={this.state.title}\n        titleStyle={{ fill: \"black\" }}\n      >\n        <ChartRow height=\"200\">\n          <YAxis\n            id=\"errors\"\n            label=\"Errors (items failed)\"\n            max={max.error}\n            style={STYLES.error.axis}\n          />\n          <Charts>\n            <LineChart\n              axis=\"elapsed\"\n              series={series}\n              columns={[\"elapsed\"]}\n              style={STYLES.elapsed.chart}\n            />\n            <ScatterChart\n              axis=\"elapsed\"\n              series={series}\n              columns={[\"elapsed\"]}\n              style={STYLES.elapsed.scatterChart}\n            />\n            <LineChart\n              axis=\"errors\"\n              series={series}\n              columns={[\"error\"]}\n              style={STYLES.error.chart}\n            />\n            <ScatterChart\n              axis=\"errors\"\n              series={series}\n              columns={[\"error\"]}\n              style={STYLES.error.chart}\n            />\n            {this.renderMarker(\"errors\", \"error\", ERROR_COLOR)}\n            {this.renderMarker(\"elapsed\", \"elapsed\", ELAPSED_COLOR)}\n          </Charts>\n          <YAxis\n            id=\"elapsed\"\n            label=\"Duration (minutes)\"\n            max={max.elapsed}\n            style={STYLES.elapsed.axis}\n          />\n        </ChartRow>\n      </ChartContainer>\n    );\n  }\n\n  render() {\n    return <div className=\"index-batch-chart-container\">{this.renderChart()}</div>;\n  }\n}\n","import React from \"react\";\n\nexport default props => {\n  const { isActive, onClick, inert = \"Refresh\", active = \"Loading\" } = props;\n  return isActive ? (\n    <div>{active}...</div>\n  ) : (\n    <div className=\"clickable link\" onClick={onClick}>\n      {inert}\n    </div>\n  );\n};\n","import React, { Component, PureComponent } from \"react\";\nimport IndexBatchChart from \"../components/chart/IndexBatchChart\";\nimport Grid from \"../components/grid/Grid\";\nimport StatefulClicker from \"../components/StatefulClicker\";\nimport renderItem from \"../utils/grid/render-item\";\nimport \"./transform.css\";\nimport api from \"../utils/api\";\n\nclass IndexingItemRenderer extends PureComponent {\n  render() {\n    return renderItem({\n      columns: [\n        \"id\",\n        \"index_batch_id\",\n        \"status\",\n        \"error_count\",\n        \"status_reason\",\n        \"start_datetime\",\n        \"stop_datetime\",\n        \"elapsed\"\n      ],\n      formatters: [\n        (value, index) => index + 1,\n        null,\n        null,\n        value => value || \"?\",\n        null,\n        value => value && new Date(value).toLocaleString(),\n        value => value && new Date(value).toLocaleString(),\n        null\n      ],\n      classNames: [\n        \"clickable\",\n        \"clickable\",\n        \"clickable\",\n        \"clickable link\",\n        \"clickable long\",\n        \"clickable\",\n        \"clickable\",\n        \"clickable\"\n      ],\n      ...this.props\n    });\n  }\n}\n\n// index_batch_error_id\tindex_batch_id\tindexed_item_type\tindexed_item_id\tmessageindex_batch_error_id index_batch_id indexed_item_type  indexed_item_id message\n// -------------------- -------------- ------------------ --------------- -----------------------------------------------\n// 8                    1              CatModels::Product 1580362         comparison of BigDecimal with BigDecimal failed\nclass IndexingErrorItemRenderer extends PureComponent {\n  render() {\n    return renderItem({\n      columns: [\n        \"index_batch_error_id\",\n        \"index_batch_id\",\n        \"indexed_item_type\",\n        \"indexed_item_id\",\n        \"message\"\n      ],\n      formatters: new Array(5),\n      classNames: [null, null, null, \"link\", \"long\"],\n      ...this.props\n    });\n  }\n}\n\nexport default class Indexing extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: null,\n      indexBatches: null,\n      loading: false\n    };\n  }\n\n  onSelectItem = item => {\n    const itemBatchId = item && item.index_batch_id;\n    const deselecting = this.state.selected === itemBatchId;\n    this.setState({ selected: null });\n    if (!deselecting) {\n      setTimeout(() => this.setState({ selected: itemBatchId }), 200);\n    }\n  };\n\n  onClickErrorItem = item => {\n    const { indexed_item_type: type, indexed_item_id: id } = item;\n    if (type !== \"CatModels::Product\" || !id) {\n      alert(`Sorry, not sure how to preview ${type} with id ${id}`);\n    } else {\n      const url = `/item_indexer/products/${id}`;\n      window.open(url, \"_blank\");\n    }\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData = () => {\n    this.setState({ loading: true, indexBatches: null });\n    fetch(api(\"index_batches\"))\n      .then(response => response.json())\n      .then(indexBatches => {\n        if (indexBatches.error) {\n          alert(\"cannot load data: \" + indexBatches.error);\n        } else {\n          this.setState({ indexBatches });\n        }\n      })\n      .finally(() => this.setState({ loading: false }));\n  };\n\n  render() {\n    const { indexBatches, selected, loading } = this.state;\n    return (\n      <div>\n        <h2>Indexing Batches</h2>\n        {indexBatches && <IndexBatchChart batches={indexBatches} />}\n        {indexBatches && (\n          <Grid\n            width={1350}\n            height={400}\n            rowHeight={35}\n            columnWidths={[50, 100, 100, 50, 450, 225, 225, 150]}\n            columnNames={[\n              \"#\",\n              \"id\",\n              \"status\",\n              \"errors\",\n              \"reason\",\n              \"start\",\n              \"stop\",\n              \"duration\"\n            ]}\n            itemName=\"indexing batch\"\n            pluralItemName=\"indexing batches\"\n            itemRenderer={IndexingItemRenderer}\n            data={indexBatches}\n            onSelectItem={this.onSelectItem}\n          />\n        )}\n        {selected && (\n          <div className=\"errors-grid\">\n            Errors\n            <Grid\n              width={1350}\n              height={400}\n              rowHeight={35}\n              columnWidths={[100, 100, 200, 150, 800]}\n              columnNames={[\n                \"id\",\n                \"batch id\",\n                \"source item type\",\n                \"source item id\",\n                \"message\"\n              ]}\n              itemName=\"error\"\n              itemRenderer={IndexingErrorItemRenderer}\n              url={api(`index_batches/${selected}`)}\n              setData={response => response.batch_errors}\n              onClickItem={this.onClickErrorItem}\n            />\n          </div>\n        )}\n        <StatefulClicker isActive={loading} onClick={this.fetchData} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport {Link, Route} from \"react-router-dom\";\n\nfunction Topics({ match }) {\n  return (\n    <div>\n      <h2>Topics</h2>\n      <ul>\n        <li>\n          <Link to={`${match.url}/rendering`}>Rendering with React</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/components`}>Components</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/props-v-state`}>Props v. State</Link>\n        </li>\n      </ul>\n\n      <Route path={`${match.path}/:topicId`} component={Topic} />\n      <Route\n        exact\n        path={match.path}\n        render={() => <h3>Please select a topic.</h3>}\n      />\n    </div>\n  );\n}\n\nfunction Topic({ match }) {\n  return (\n    <div>\n      <h3>{match.params.topicId}</h3>\n    </div>\n  );\n}\n\nexport default Topics;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Home from './pages/home';\nimport Preview from './pages/preview';\nimport Transform from './pages/transform';\nimport Inbound from './pages/inbound';\nimport Indexing from './pages/indexing';\nimport Topics from './pages/topics';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router basename={`${process.env.PUBLIC_URL}/`}>\n      <div className=\"App\">\n        <ul className=\"App-navigation\">\n          <li>\n            <Link to=\"/preview\">Preview</Link>\n          </li>\n          <li>\n            <Link to=\"/inbound\">Inbound</Link>\n          </li>\n          <li>\n            <Link to=\"/transform\">Transform</Link>\n          </li>\n          <li>\n            <Link to=\"/indexing\">Indexing</Link>\n          </li>\n        </ul>\n\n        <hr />\n\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/preview\" component={Preview} />\n        <Route path=\"/inbound\" component={Inbound} />\n        <Route path=\"/transform\" component={Transform} />\n        <Route path=\"/indexing\" component={Indexing} />\n        <Route path=\"/topics\" component={Topics} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}