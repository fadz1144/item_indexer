{"version":3,"sources":["utils/api.js","components/Preview.js","pages/home.js","pages/preview.js","utils/px.js","components/grid/Header.js","components/Inflected.js","components/grid/Footer.js","components/grid/Grid.js","utils/grid/render-item.js","pages/transform.js","pages/inbound.js","pages/indexing.js","pages/topics.js","App.js","serviceWorker.js","index.js"],"names":["API_BASE","concat","process","api","path","isInteger","input","parseInt","Loading","react_default","a","createElement","className","Instructions","Preview","props","JSON","stringify","content","_default","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","productId","target","value","setState","canSubmit","preview","isLoading","fetch","state","then","response","json","data","catch","exception","alert","finally","preventDefault","body","_this$state","Preview_Loading","Preview_Preview","Preview_Instructions","render","_this$state2","onSubmit","autoFocus","placeholder","disabled","Component","Home","components_Preview_default","pages_preview","px","Header","positions","columnWidths","acc","map","val","current","positionsFromWidths","style","height","rowHeight","position","width","border","columnNames","name","index","key","left","top","Inflected","_ref","count","singular","plural","inflected","suffix","Footer","itemName","pluralItemName","isSelected","onDeselect","_ref2","onClick","Grid","extractData","setData","prevState","unfilteredData","selected","gridRef","React","createRef","_this2","url","_this3","_this$props","onSelectItem","onClickItem","item","dataId","getAttribute","selectedItem","scrollToItem","align","rowIndex","length","_this4","_this$props2","itemRenderer","outerElementType","forwardRef","ref","assign","bind","index_esm","itemData","columnCount","columnWidth","rowCount","render_item","columnIndex","columns","formatters","classNames","formatter","data-id","title","TransformItemRenderer","renderItem","objectSpread","Date","toLocaleString","PureComponent","TransformErrorItemRenderer","Array","Transform","itemBatchId","transform_batch_id","deselecting","setTimeout","Grid_Grid","batch_errors","InboundItemRenderer","Inbound","IndexingItemRenderer","IndexingErrorItemRenderer","Indexing","index_batch_id","onClickErrorItem","type","indexed_item_type","id","indexed_item_id","window","open","Topic","match","params","topicId","Topics","react_router_dom","to","react_router","component","exact","App","basename","Boolean","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7dbec55f.chunk.js","sourcesContent":["const API_BASE = `${process.env.PUBLIC_URL}/../api/`;\nconst API_SUFFIX = \".json\";\n\nexport default path => {\n  return API_BASE + path + API_SUFFIX;\n};\n","import React, { Component } from \"react\";\nimport api from \"../utils/api\";\nimport \"./Preview.css\";\n\nconst isInteger = input => {\n  return \"\" + parseInt(input) === input;\n};\n\nconst Loading = () => <div className=\"preview-instructions\">Loading...</div>;\n\nconst Instructions = () => {\n  return (\n    <div className=\"preview-instructions\">\n      Enter a bridge catalog db product id to preview how it is indexed.\n    </div>\n  );\n};\n\nconst Preview = props => {\n  return (\n    <pre className=\"align-left preview\">\n      {JSON.stringify(props.content, null, \" \")}\n    </pre>\n  );\n};\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      productId: \"\",\n      canSubmit: false,\n      preview: \"\",\n      isLoading: false\n    };\n  }\n\n  onChange = e => {\n    const productId = e.target.value;\n    this.setState({ productId, canSubmit: isInteger(productId) });\n  };\n\n  preview = e => {\n    this.setState({ isLoading: true });\n    fetch(api(`products/${this.state.productId}?stream=false`))\n      .then(response => response.json())\n      .then(data => this.setState({ preview: data }))\n      .catch(exception => alert(`Unable to preview: ${exception}`))\n      .finally(() => {\n        this.setState({ isLoading: false });\n      });\n    e.preventDefault();\n  };\n\n  body = () => {\n    const { isLoading, preview } = this.state;\n    if (isLoading) {\n      return <Loading />;\n    } else if (preview) {\n      return <Preview content={preview} />;\n    } else {\n      return <Instructions />;\n    }\n  };\n\n  render = () => {\n    const { productId, canSubmit } = this.state;\n    return (\n      <form onSubmit={this.preview}>\n        <input\n          value={productId}\n          onChange={this.onChange}\n          autoFocus\n          placeholder=\"product id\"\n          className=\"preview-text-input\"\n        />\n        <span>{canSubmit}</span>\n        <button className=\"preview-button\" disabled={!canSubmit}>\n          Preview\n        </button>\n        {this.body()}\n      </form>\n    );\n  };\n}\n","import React from \"react\";\nimport Preview from \"../components/Preview\";\n\nfunction Home() {\n  return (\n    <div>\n      <h2>Welcome to Item Indexer</h2>\n      <Preview />\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport Preview from \"../components/Preview\";\n\nexport default function () {\n  return (\n    <div>\n      <h2>Product Preview</h2>\n      <Preview />\n    </div>\n  );\n}\n","export default value => value && `${value}px`;\n","import React from \"react\";\nimport px from \"../../utils/px\";\n\nconst positionsFromWidths = columnWidths => {\n  let acc = 0;\n  return columnWidths.map(val => {\n    const current = acc;\n    acc += val;\n    return current;\n  });\n};\n\nexport default props => {\n  const positions = positionsFromWidths(props.columnWidths);\n  return (\n    <div\n      className=\"Header\"\n      style={{\n        height: px(props.rowHeight),\n        position: \"relative\",\n        width: px(props.width),\n        border: \"0 none\"\n      }}\n    >\n      {props.columnNames.map((name, index) => (\n        <div\n          key={name}\n          style={{\n            position: \"absolute\",\n            left: px(positions[index]),\n            top: \"0px\",\n            height: px(props.rowHeight),\n            width: px(props.columnWidths[index])\n          }}\n        >\n          {name}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({ count, singular, plural }) => {\n  const suffix = count => (count === 1 ? \"\" : \"s\");\n  const inflected = () => {\n    const isPlural = count !== 1;\n    let inflected = singular;\n    if (isPlural) {\n      inflected = plural || singular + suffix();\n    }\n    return inflected;\n  };\n  return <span>{inflected()}</span>;\n};","import React from \"react\";\nimport Inflected from \"../Inflected\";\n\nexport default ({\n  count,\n  itemName,\n  pluralItemName,\n  isSelected,\n  onDeselect\n}) => {\n\n  // selection indicator and UI for clearing same\n  const Selected = ({ onDeselect }) => {\n    return <span> selected <span className=\"clickable link\" onClick={onDeselect}>clear</span></span>\n  };\n\n  return (\n    <div>\n      {count}\n      {count !== \"none\" && (\n        <span>\n          {\" \"}\n          <Inflected\n            count={count}\n            singular={itemName}\n            plural={pluralItemName}\n          />\n          {isSelected && <Selected onDeselect={onDeselect}/>}\n        </span>\n      )}\n    </div>\n  );\n};\n","import { VariableSizeGrid } from \"react-window\";\nimport React, { forwardRef, Component } from \"react\";\nimport Header from \"../../components/grid/Header\";\nimport Footer from \"./Footer\";\nimport \"./Grid.css\";\n\nexport default class Grid extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      unfilteredData: null,\n      selected: null\n    };\n    this.gridRef = React.createRef();\n  }\n\n  extractData = response => {\n    const method = this.props.setData || (data => data);\n    return method(response);\n  };\n\n  componentDidMount() {\n    fetch(this.props.url)\n      .then(response => response.json())\n      .then(data => this.extractData(data))\n      .then(data => this.setState({ data }));\n  }\n\n  onClick({ target }) {\n    const { onSelectItem, onClickItem } = this.props;\n\n    const item = () => {\n      const dataId = target.getAttribute(\"data-id\");\n      return this.state.data && this.state.data[dataId];\n    };\n\n    if (onClickItem) {\n      onClickItem(item());\n    }\n\n    if (onSelectItem) {\n      const selectedItem = item();\n      if (this.state.selected) {\n        // clear already selected item\n        this.onDeselect();\n      } else {\n        if (selectedItem) {\n          if (!this.state.selected) {\n            // set selected state\n            this.gridRef.current.scrollToItem({\n              align: \"start\",\n              rowIndex: 0\n            });\n            this.setState(prevState => {\n              return {\n                data: [selectedItem],\n                unfilteredData: prevState.unfilteredData || prevState.data,\n                selected: selectedItem\n              };\n            });\n          }\n        }\n      }\n\n      onSelectItem(selectedItem);\n    }\n  }\n\n  onDeselect = () => {\n    this.setState(prevState => {\n      return {\n        data: prevState.unfilteredData,\n        unfilteredData: null,\n        selected: null\n      };\n    });\n  };\n\n  count() {\n    let count = \"none\";\n    if (this.state.data && this.state.data.length) {\n      count = this.state.data.length;\n    }\n    return count;\n  }\n\n  render() {\n    const {\n      width,\n      height,\n      rowHeight,\n      columnNames,\n      columnWidths,\n      itemName,\n      pluralItemName,\n      itemRenderer\n    } = this.props;\n\n    const outerElementType = forwardRef((props, ref) => {\n      return <div ref={ref} onClick={this.onClick.bind(this)} {...props} />;\n    });\n\n    return (\n      <div>\n        {this.state.data && this.state.data.length > 0 && (\n          <div>\n            <Header\n              columnWidths={columnWidths}\n              width={width}\n              rowHeight={rowHeight}\n              columnNames={columnNames}\n            />\n            <VariableSizeGrid\n              itemData={this.state.data}\n              className=\"List\"\n              columnCount={columnWidths.length}\n              columnWidth={index => columnWidths[index]}\n              outerElementType={outerElementType}\n              height={this.state.selected ? rowHeight : height}\n              rowCount={this.state.data.length}\n              rowHeight={() => rowHeight}\n              width={width}\n              ref={this.gridRef}\n            >\n              {itemRenderer}\n            </VariableSizeGrid>\n          </div>\n        )}\n        <Footer\n          count={this.count()}\n          itemName={itemName}\n          pluralItemName={pluralItemName}\n          isSelected={!!this.state.selected}\n          onDeselect={this.onDeselect}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default ({\n  columnIndex,\n  data,\n  rowIndex,\n  style,\n  columns,\n  formatters,\n  classNames\n}) => {\n  // Access the data source using the \"data\" prop:\n  const value = data[rowIndex][columns[columnIndex]];\n  const formatter = formatters[columnIndex];\n  const item = !!formatter ? formatter(value, rowIndex) : value;\n\n  const className = `${classNames[columnIndex]} ${\n    rowIndex % 2 === 0 ? \"even\" : \"odd\"\n  }`;\n\n  return (\n    <div className={className} data-id={rowIndex} style={style} title={item}>\n      {item}\n    </div>\n  );\n};","import React, { Component, PureComponent } from \"react\";\nimport Grid from \"../components/grid/Grid\";\nimport renderItem from \"../utils/grid/render-item\";\nimport \"./transform.css\";\nimport api from \"../utils/api\";\n\nclass TransformItemRenderer extends PureComponent {\n  render() {\n    return renderItem({\n      columns: [\n        \"id\",\n        \"transform_batch_id\",\n        \"status\",\n        \"status_reason\",\n        \"start_datetime\",\n        \"stop_datetime\"\n      ],\n      formatters: [\n        (value, index) => index + 1,\n        null,\n        null,\n        // value => value && value.substring(0, 100),\n        null,\n        value => value && new Date(value).toLocaleString(),\n        value => value && new Date(value).toLocaleString()\n      ],\n      classNames: ['clickable', 'clickable link', 'clickable long', 'clickable', 'clickable'],\n      ...this.props\n    });\n  }\n}\n\n// transform_batch_error_id transform_batch_id source_item_type     source_item_id message\n// ------------------------ ------------------ -------------------- -------------- --------------------------------------\n// 6250282                  140767             External::XPDM::Item 67048021       Concept skus concept vendor must exist\n\nclass TransformErrorItemRenderer extends PureComponent {\n  render() {\n    return renderItem({\n      columns: [\n        \"transform_batch_error_id\",\n        \"transform_batch_id\",\n        \"source_item_type\",\n        \"source_item_id\",\n        \"message\"\n      ],\n      formatters: new Array(5),\n      classNames: [null, null, null, null, \"long\"],\n      ...this.props\n    });\n  }\n}\n\nexport default class Transform extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: null\n    };\n  }\n\n  onSelectItem = item => {\n    const itemBatchId = item && item.transform_batch_id;\n    const deselecting = this.state.selected === itemBatchId;\n    this.setState({selected: null});\n    if (!deselecting) {\n      setTimeout(() => this.setState({ selected: itemBatchId }), 200);\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h2>Inbound Transform Batches</h2>\n        <Grid\n          width={1350}\n          height={400}\n          rowHeight={35}\n          columnWidths={[50, 100, 75, 500, 300, 300]}\n          columnNames={[\"#\", \"id\", \"status\", \"reason\", \"start\", \"stop\"]}\n          itemName=\"transform batch\"\n          pluralItemName=\"transform batches\"\n          itemRenderer={TransformItemRenderer}\n          url={api(\"transform_batches\")}\n          onSelectItem={this.onSelectItem}\n        />\n        {this.state.selected && (\n          <div className=\"errors-grid\">\n            Errors\n            <Grid\n              width={1350}\n              height={400}\n              rowHeight={35}\n              columnWidths={[100, 100, 300, 150, 650]}\n              columnNames={[\"id\", \"batch id\", \"source item type\", \"source item id\", \"message\"]}\n              itemName=\"error\"\n              itemRenderer={TransformErrorItemRenderer}\n              url={api(`transform_batches/${this.state.selected}`)}\n              setData={response => response.batch_errors}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component, PureComponent } from \"react\";\nimport Grid from \"../components/grid/Grid\";\nimport renderItem from \"../utils/grid/render-item\";\nimport api from \"../utils/api\";\nimport \"./transform.css\";\n\nclass InboundItemRenderer extends PureComponent {\n  render() {\n    return renderItem({\n      columns: [\n        \"id\",\n        \"inbound_batch_id\",\n        \"source\",\n        \"data_type\",\n        \"status\",\n        \"status_reason\",\n        \"file_name\",\n        \"start_datetime\",\n        \"stop_datetime\",\n        \"transform_batch_id\"\n      ],\n      formatters: [\n        (value, index) => index + 1,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        value => value && new Date(value).toLocaleString(),\n        value => value && new Date(value).toLocaleString(),\n        null\n      ],\n      classNames: [\n        null,\n        null,\n        null,\n        null,\n        null,\n        \"long\",\n        \"medium\",\n        null,\n        null,\n        null,\n        null\n      ],\n      ...this.props\n    });\n  }\n}\n\n// inbound_batch_id source data_type   status   status_reason                                                                                     file_name                  start_datetime      stop_datetime       transform_batch_id\n// ---------------- ------ ----------- -------- ------------------------------------------------------------------------------------------------- -------------------------- ------------------- ------------------- ------------------\n// 79340            JDA    sku_pricing complete Completed successfully (0 records processed, taking 1.3978579999999998 sec). (Oct 14 10:05 (UTC)) AS/400(BEYOND): PIPPRCMSSW 2018-10-14 10:05:26 2018-10-14 10:05:28 76241\n\nexport default class Inbound extends Component {\n  render() {\n    return (\n      <div>\n        <h2>Inbound Batches</h2>\n        <Grid\n          width={1600}\n          height={400}\n          rowHeight={35}\n          columnWidths={[50, 75, 100, 100, 75, 375, 300, 200, 200, 100]}\n          columnNames={[\n            \"#\",\n            \"id\",\n            \"source\",\n            \"data type\",\n            \"status\",\n            \"reason\",\n            \"file_name\",\n            \"start\",\n            \"stop\",\n            \"transform batch id\"\n          ]}\n          itemName=\"inbound batch\"\n          pluralItemName=\"inbound batches\"\n          itemRenderer={InboundItemRenderer}\n          url={api(\"inbound_batches\")}\n          onSelectItem={this.onSelectItem}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component, PureComponent } from \"react\";\nimport Grid from \"../components/grid/Grid\";\nimport renderItem from \"../utils/grid/render-item\";\nimport \"./transform.css\";\nimport api from \"../utils/api\";\n\nclass IndexingItemRenderer extends PureComponent {\n  render() {\n    return renderItem({\n      columns: [\n        \"id\",\n        \"index_batch_id\",\n        \"status\",\n        \"error_count\",\n        \"status_reason\",\n        \"start_datetime\",\n        \"stop_datetime\",\n        \"elapsed\"\n      ],\n      formatters: [\n        (value, index) => index + 1,\n        null,\n        null,\n        value => value || '?',\n        null,\n        value => value && new Date(value).toLocaleString(),\n        value => value && new Date(value).toLocaleString(),\n        null\n      ],\n      classNames: [\n        \"clickable\",\n        \"clickable\",\n        \"clickable\",\n        \"clickable link\",\n        \"clickable long\",\n        \"clickable\",\n        \"clickable\",\n        \"clickable\"\n      ],\n      ...this.props\n    });\n  }\n}\n\n// index_batch_error_id\tindex_batch_id\tindexed_item_type\tindexed_item_id\tmessageindex_batch_error_id index_batch_id indexed_item_type  indexed_item_id message\n// -------------------- -------------- ------------------ --------------- -----------------------------------------------\n// 8                    1              CatModels::Product 1580362         comparison of BigDecimal with BigDecimal failed\nclass IndexingErrorItemRenderer extends PureComponent {\n  render() {\n    return renderItem({\n      columns: [\n        \"index_batch_error_id\",\n        \"index_batch_id\",\n        \"indexed_item_type\",\n        \"indexed_item_id\",\n        \"message\"\n      ],\n      formatters: new Array(5),\n      classNames: [null, null, null, \"link\", \"long\"],\n      ...this.props\n    });\n  }\n}\n\nexport default class Indexing extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: null\n    };\n  }\n\n  onSelectItem = item => {\n    const itemBatchId = item && item.index_batch_id;\n    const deselecting = this.state.selected === itemBatchId;\n    this.setState({ selected: null });\n    if (!deselecting) {\n      setTimeout(() => this.setState({ selected: itemBatchId }), 200);\n    }\n  };\n\n  onClickErrorItem = item => {\n    const { indexed_item_type: type, indexed_item_id: id } = item;\n    if (type !== \"CatModels::Product\" || !id) {\n      alert(`Sorry, not sure how to preview ${type} with id ${id}`);\n    } else {\n      const url = `/item_indexer/products/${id}`;\n      window.open(url, \"_blank\");\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h2>Indexing Batches</h2>\n        <Grid\n          width={1350}\n          height={400}\n          rowHeight={35}\n          columnWidths={[50, 100, 100, 50, 450, 225, 225, 150]}\n          columnNames={[\n            \"#\",\n            \"id\",\n            \"status\",\n            \"errors\",\n            \"reason\",\n            \"start\",\n            \"stop\",\n            \"duration\"\n          ]}\n          itemName=\"indexing batch\"\n          pluralItemName=\"indexing batches\"\n          itemRenderer={IndexingItemRenderer}\n          url={api(\"index_batches\")}\n          onSelectItem={this.onSelectItem}\n        />\n        {this.state.selected && (\n          <div className=\"errors-grid\">\n            Errors\n            <Grid\n              width={1350}\n              height={400}\n              rowHeight={35}\n              columnWidths={[100, 100, 200, 150, 800]}\n              columnNames={[\n                \"id\",\n                \"batch id\",\n                \"source item type\",\n                \"source item id\",\n                \"message\"\n              ]}\n              itemName=\"error\"\n              itemRenderer={IndexingErrorItemRenderer}\n              url={api(`index_batches/${this.state.selected}`)}\n              setData={response => response.batch_errors}\n              onClickItem={this.onClickErrorItem}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport {Link, Route} from \"react-router-dom\";\n\nfunction Topics({ match }) {\n  return (\n    <div>\n      <h2>Topics</h2>\n      <ul>\n        <li>\n          <Link to={`${match.url}/rendering`}>Rendering with React</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/components`}>Components</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/props-v-state`}>Props v. State</Link>\n        </li>\n      </ul>\n\n      <Route path={`${match.path}/:topicId`} component={Topic} />\n      <Route\n        exact\n        path={match.path}\n        render={() => <h3>Please select a topic.</h3>}\n      />\n    </div>\n  );\n}\n\nfunction Topic({ match }) {\n  return (\n    <div>\n      <h3>{match.params.topicId}</h3>\n    </div>\n  );\n}\n\nexport default Topics;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Home from './pages/home';\nimport Preview from './pages/preview';\nimport Transform from './pages/transform';\nimport Inbound from './pages/inbound';\nimport Indexing from './pages/indexing';\nimport Topics from './pages/topics';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router basename={`${process.env.PUBLIC_URL}/`}>\n      <div className=\"App\">\n        <ul className=\"App-navigation\">\n          <li>\n            <Link to=\"/preview\">Preview</Link>\n          </li>\n          <li>\n            <Link to=\"/inbound\">Inbound</Link>\n          </li>\n          <li>\n            <Link to=\"/transform\">Transform</Link>\n          </li>\n          <li>\n            <Link to=\"/indexing\">Indexing</Link>\n          </li>\n        </ul>\n\n        <hr />\n\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/preview\" component={Preview} />\n        <Route path=\"/inbound\" component={Inbound} />\n        <Route path=\"/transform\" component={Transform} />\n        <Route path=\"/indexing\" component={Indexing} />\n        <Route path=\"/topics\" component={Topics} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}