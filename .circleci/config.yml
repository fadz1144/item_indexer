# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  aws_deploy:
    environment:
      AWS_ACCOUNT_ID: "774076615373"
      AWS_DEFAULT_REGION: 'us-east-1'

    working_directory: ~/repo

    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - setup_remote_docker:
          reusable: true
      - run:
          name: Install awscli and docker-compose
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1
            pip install \
              docker-compose==1.12.0 \
              awscli==1.11.76
      - checkout
      - run:
          name: Add version and commit sha to build
          # Note the first command uses a single > to overwrite version.rb completely. Important.
          command: |
            echo "ENV['BBB_CI_VERSION'] = '$CIRCLE_BRANCH:$CIRCLE_BUILD_NUM'" > config/initializers/ci_version.rb
            echo "ENV['BBB_COMMIT_SHA'] = '$CIRCLE_SHA1'" >> config/initializers/ci_version.rb
            echo "ENV['CIRCLE_COMPARE_URL'] = '$CIRCLE_COMPARE_URL'" >> config/initializers/ci_version.rb
      - run:
          name: Push to ECR
          command: |
            echo "Get login"
            login="$(aws ecr get-login)"
            ${login}
            if [[ "master" = "$CIRCLE_BRANCH" ]] ; then
              TAG="latest"
              SHOULD_DEPLOY="true"
            else
              TAG=$CIRCLE_BRANCH
              SHOULD_DEPLOY="false"
            fi
            pwd
            find .
            mv Dockerfile.aws Dockerfile
            docker build --build-arg ssh_prv_key="$(cat ~/.ssh/id_rsa)" -t $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/bbb-labs/$CIRCLE_PROJECT_REPONAME:$TAG -t $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/bbb-labs/$CIRCLE_PROJECT_REPONAME:build-$CIRCLE_BUILD_NUM .
            docker push $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/bbb-labs/$CIRCLE_PROJECT_REPONAME:$TAG
            docker push $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/bbb-labs/$CIRCLE_PROJECT_REPONAME:build-$CIRCLE_BUILD_NUM
            if [[ "true" = "$SHOULD_DEPLOY" ]] ; then
              echo "Update task to point to new latest version"
              aws ecs register-task-definition --cli-input-json file://scripts/aws/task-definition.json
              echo "Update service"
              aws ecs update-service --cli-input-json file://scripts/aws/update-service-definition.json
              echo "Update complete"
            fi
  deploy:
    docker:
      - image: google/cloud-sdk
    working_directory: ~/repo
    steps:
      - run:
          name: Store Service Account
          command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
      - run:
          name: Init Gcloud
          command: |
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud auth configure-docker
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
#           gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
#           gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}
      - setup_remote_docker
      - checkout
      - run:
          name: Add version and commit sha to build
          # Note the first command uses a single > to overwrite version.rb completely. Important.
          command: |
            echo "ENV['BBB_CI_VERSION'] = '$CIRCLE_BRANCH:$CIRCLE_BUILD_NUM'" > config/ci_version.rb
            echo "ENV['BBB_COMMIT_SHA'] = '$CIRCLE_SHA1'" >> config/ci_version.rb
      - run:
          name: Push container to GCR
          command: |
            if [[ "master" = "$CIRCLE_BRANCH" ]] ; then
              SHOULD_DEPLOY="true"
            else
              SHOULD_DEPLOY="false"
            fi
            BRANCH=$CIRCLE_BRANCH
            NUMERIC_TAG="build-${CIRCLE_BUILD_NUM}"
            pwd
            find .
            GCR_HOST=us.gcr.io
            DOCKER_IMAGE_NAME=$(echo -n ${CIRCLE_PROJECT_REPONAME} | sed -e 's/_/-/g')
            DOCKERURL="${GCR_HOST}/${GOOGLE_PROJECT_ID}/appengine/${DOCKER_IMAGE_NAME}"
            docker build -t ${DOCKERURL}.${BRANCH} -t ${DOCKERURL}:${NUMERIC_TAG} .
            docker push ${DOCKERURL}.${BRANCH}:latest && echo "Pushed successfully 1/2" || echo "Failed to push ${TAG}"
            docker push ${DOCKERURL}:${NUMERIC_TAG} && echo "Pushed successfully 2/2" || echo "Failed to push ${NUMERIC_TAG}"
            if [[ "true" = "$SHOULD_DEPLOY" ]] ; then
              echo "Should-deploy was set to true - @TODO to deploy CI/CD env..."
            fi
workflows:
  version: 2
  only_aws_workflow:
    jobs:
      - aws_deploy

#
#==============
# If you're dev'ing on this config file locally and want to avoid having to push a million revisions to GitHub try this! Just change the file locally and save, then:
# 1. export CIRCLE_TOKEN=xxxxxxx (get your token here -> https://circleci.com/account/api ) - I added this to my .bash_profile
# 2. Run this command in the ROOT of the repository:
# curl --user ${CIRCLE_TOKEN}: --request POST --form revision=$(git rev-parse --verify HEAD) --form config=@.circleci/config.yml --form notify=false  https://circleci.com/api/v1.1/project/github/okl/$(basename $(pwd))/tree/$(git rev-parse --abbrev-ref HEAD 2>/dev/null | tr -d '\n')
#
